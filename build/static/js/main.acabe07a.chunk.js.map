{"version":3,"sources":["Component/QuizOption.js","Component/QuizQuestio.js","Component/Quiz.js","App.js","index.js"],"names":["QuizOption","value","CheckAnswer","className","onClick","QuizQuestion","dataq","QestionNo","totalQuestion","question","color","options","map","item","index","Quiz","setData","answer","score","useEffect","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","setCurrentQues","data","s_no","console","log","useState","currentQues","setScore","setSubmition","quizStatus","setQuizStatus","QuizQuestio","setTimeout","alert","preValue","push","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.acabe07a.chunk.js","sourcesContent":["function QuizOption({ value, CheckAnswer,}) {\r\n  const onClickHandle = () => {\r\n    CheckAnswer(value);\r\n    \r\n\r\n  };\r\n  return (\r\n    <div className=\"QuizOption-container\">\r\n      <h4  onClick={onClickHandle}>{value}</h4>\r\n    </div>\r\n  );\r\n}\r\nexport default QuizOption;\r\n","import QuizOption from \"./QuizOption\"\r\n\r\nfunction QuizQuestion({dataq,QestionNo,totalQuestion,CheckAnswer,color}){\r\n  const {question,options}=dataq\r\n  return(\r\n    <div className=\"QuizQuestion-container\">\r\n      <h2>Qestion {QestionNo} out of {totalQuestion}</h2>\r\n      <h4>{question}</h4>\r\n      {/* <QuizOption value={\"delhi\"}/> */}\r\n      {\r\n        options.map((item,index)=>{\r\n          return <QuizOption value={item} key={index} CheckAnswer={CheckAnswer} />\r\n          \r\n        })\r\n      }\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\nexport default QuizQuestion","import QuizQuestion from \"./QuizQuestio\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction Quiz() {\r\n  let setData = [\r\n    {\r\n      question: \"what is the capital of india\",\r\n      options: [\"Rajasthan\", \"Mumbai\", \"Delhi\", \"banglore\"],\r\n      answer: \"Delhi\",\r\n      score: -1\r\n    },\r\n    {\r\n      question: \"what is the capital of madhya-pradesh\",\r\n      options: [\"Bhopal\", \"Gwalior\", \"Jabalpur\", \"indore\"],\r\n      answer: \"Bhopal\",\r\n      score: -1\r\n    },\r\n    {\r\n      question: \"what is the capital of Maharastra\",\r\n      options: [\"Nagpur\", \"Mumbai\", \"pune\", \"Nasik\"],\r\n      answer: \"Mumbai\",\r\n      score: -1\r\n    },\r\n    {\r\n      question: \"what is the capital of Utter-Pradesh\",\r\n      options: [\"Mirjapur\", \"Agra\", \"Rurki\", \"Lakhnau\"],\r\n      answer: \"Lakhnau\",\r\n      score: -1\r\n    },\r\n    {\r\n      question: \"what is the capital of UK(uttarakhand)\",\r\n      options: [\"Dehradun\", \"Mesoor\", \"Rurki\", \"banglore\"],\r\n      answer: \"Dehradun\",\r\n      score: -1\r\n    }\r\n  ];\r\n  function shuffle(array) {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex !== 0) {\r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex]\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  useEffect(() => {\r\n    shuffle(setData);\r\n    setCurrentQues({\r\n      data: setData[0],\r\n      s_no: 1\r\n    });\r\n    console.log(setData);\r\n  }, []);\r\n\r\n  const [currentQues, setCurrentQues] = useState({\r\n    data: {\r\n      question: \"what is the capital of UK(uttarakhand)\",\r\n      options: [\"Dehradun\", \"Mesoor\", \"Rurki\", \"banglore\"],\r\n      answer: \"Dehradun\",\r\n      score: -1\r\n    },\r\n    s_no: 1\r\n  });\r\n  const CheckAnswer = (value) => {\r\n    setTimeout(() => {\r\n      if (currentQues.data.answer === value) {\r\n       \r\n        alert(\"your answer is correct\");\r\n        setScore((preValue) => preValue + 5);\r\n        \r\n        setSubmition((preValue) => {\r\n          preValue.push(true);\r\n          return preValue;\r\n\r\n\r\n        });\r\n      } else {\r\n        alert(\"your answer is incorrect\");\r\n      \r\n\r\n        setSubmition((preValue) => {\r\n          preValue.push(true);\r\n          return preValue;\r\n        });\r\n      }\r\n      if (currentQues.s_no === setData.length) {\r\n        setQuizStatus(0);\r\n      }\r\n      setCurrentQues((preValue) => {\r\n        return {\r\n          data: setData[preValue.s_no],\r\n          s_no: preValue.s_no + 1\r\n        };\r\n      });\r\n    },1000);\r\n  };\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [submition, setSubmition] = useState([]);\r\n  const [quizStatus, setQuizStatus] = useState(1);\r\n\r\n\r\n  return (\r\n    <div className=\"Quiz-container\">\r\n      <h2>React Quiz</h2>\r\n      <p>Current Score : {score}</p>\r\n      {quizStatus ? (\r\n        <QuizQuestion\r\n          dataq={currentQues.data}\r\n          QestionNo={currentQues.s_no}\r\n          totalQuestion={setData.length}\r\n          CheckAnswer={CheckAnswer}\r\n         \r\n        />\r\n      ) : (\r\n        <div>Quize ended</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Quiz;\r\n","import Quiz from \"./Component/Quiz\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>QUIZ APPLICATION</h1>\n      <Quiz />\n    </div>\n  );\n}\n","\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n\n    <App />\n\n);\n"],"sourceRoot":""}